# ConnectFour
// Connect Four game with Joshua Bach, Christopher Ma, and Hayden Howard.
#include <iostream>
#include <cstring>
#include <windows.h>
#include <ctime>
using namespace std;
    void matrix();
    void board();
    void p1Choice();
    void p2Choice();
    void whoWins();
    void p1Win();
    void p2Win();
    void text_animation(char [100]);
    const int r = 6, c = 7;
char p1C = 0,
     p2C = 0;
int x[7] = {5,5,5,5,5,5,5};
string winner = "0",
       coords [r][c];
int main()
{
    /// matrix();
    system("title Connect 4");
    system("mode 500");
    system("color 0a");
    char a[100];
    /*Title Screen*/{
    text_animation("  ________     ________    ___       _    ___       _    _________     ________    _________\n");
    text_animation(" / _____  |   / _____  |  |   |_    | |  |   |_    | |  |  _______|   / _____  |  |___   ___|\n");
    text_animation("| |     |_|  | |     | |  | |_  |   | |  | |_  |   | |  | |_______   | |     |_|      | |\n");
    text_animation("| |          | |     | |  | | | |_  | |  | | | |_  | |  |  _______|  | |              | |\n");
    text_animation("| |      _   | |     | |  | | |_  | | |  | | |_  | | |  | |          | |      _       | |\n");
    text_animation("| |_____| |  | |_____| |  | |   | |_| |  | |   | |_| |  | |_______   | |_____| |      | |\n");
    text_animation("|_________|  |________/   |_|   |_____|  |_|   |_____|  |_________|  |_________|      |_|\n");

    text_animation("                                              ___\n");
    text_animation("                                             /   |\n");
    text_animation("                                            / /| |\n");
    text_animation("                                           / /_| |_\n");
    text_animation("                                          |____   _|\n");
    text_animation("                                               | |\n");
    text_animation("                                               |_|\n");
    system("pause");
    }
    /*Assigns the playable spaces*/{
            for(int i = 0;i<6;i++){
                for(int j = 0;j<7;j++){
                    coords[i][j] = "_";
                }
            }
    }
    board(); /// Prints the board to start the game
    /*The entire game loop*/{
        while(winner == "0"){
            p1Choice();
            p2Choice();
        }
    }
    return 0;
}

void board(){ /*Draw the board*/
    system("cls");
    /// SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE),9);
    cout << "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\t\t\t\t\t\t\t\t  z   x   c   v   b   n   m   \n"
            "\t\t\t\t\t\t\t\t\t| " << coords[0][0] << " | " << coords[0][1] << " | " << coords[0][2] << " | " << coords[0][3] << " | " << coords[0][4] << " | " << coords[0][5] << " | " << coords[0][6] << " |\n"
            "\n"
            "\t\t\t\t\t\t\t\t\t| " << coords[1][0] << " | " << coords[1][1] << " | " << coords[1][2] << " | " << coords[1][3] << " | " << coords[1][4] << " | " << coords[1][5] << " | " << coords[1][6] << " |\n"
            "\n"
            "\t\t\t\t\t\t\t\t\t| " << coords[2][0] << " | " << coords[2][1] << " | " << coords[2][2] << " | " << coords[2][3] << " | " << coords[2][4] << " | " << coords[2][5] << " | " << coords[2][6] << " |\n"
            "\n"
            "\t\t\t\t\t\t\t\t\t| " << coords[3][0] << " | " << coords[3][1] << " | " << coords[3][2] << " | " << coords[3][3] << " | " << coords[3][4] << " | " << coords[3][5] << " | " << coords[3][6] << " |\n"
            "\n"
            "\t\t\t\t\t\t\t\t\t| " << coords[4][0] << " | " << coords[4][1] << " | " << coords[4][2] << " | " << coords[4][3] << " | " << coords[4][4] << " | " << coords[4][5] << " | " << coords[4][6] << " |\n"
            "\n"
            "\t\t\t\t\t\t\t\t\t| " << coords[5][0] << " | " << coords[5][1] << " | " << coords[5][2] << " | " << coords[5][3] << " | " << coords[5][4] << " | " << coords[5][5] << " | " << coords[5][6] << " |\n";
    whoWins();
}

void p1Choice(){ /*Player one cooses where they place*/
    /// SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE),4);
    cout << "Player 1: \n";
    cin >> p1C;
            if(p1C == 'z'){
                coords[x[0]][0] = "1";
                x[0]--;
                }
            else if(p1C == 'x'){
                coords[x[1]][1] = "1";
                x[1]--;
            }
            else if(p1C == 'c'){
                coords[x[2]][2] = "1";
                x[2]--;
            }
            else if(p1C == 'v'){
                coords[x[3]][3] = "1";
                x[3]--;
            }
            else if(p1C == 'b'){
                coords[x[4]][4] = "1";
                x[4]--;
            }
            else if(p1C == 'n'){
                coords[x[5]][5] = "1";
                x[5]--;
            }
            else if(p1C == 'm'){
                coords[x[6]][6] = "1";
                x[6]--;
            }
    board();
}

void p2Choice(){ /*Player two cooses where they place*/
    cout << "Player 2: \n";
    cin >> p2C;
            if(p2C == 'z'){
                coords[x[0]][0] = "2";
                x[0]--;
                }
            else if(p2C == 'x'){
                coords[x[1]][1] = "2";
                x[1]--;
            }
            else if(p2C == 'c'){
                coords[x[2]][2] = "2";
                x[2]--;
            }
            else if(p2C == 'v'){
                coords[x[3]][3] = "2";
                x[3]--;
            }
            else if(p2C == 'b'){
                coords[x[4]][4] = "2";
                x[4]--;
            }
            else if(p2C == 'n'){
                coords[x[5]][5] = "2";
                x[5]--;
            }
            else if(p2C == 'm'){
                coords[x[6]][6] = "2";
                x[6]--;
            }
    board();
}

void whoWins(){ /*Figures out who wins*/
    string player = "1";
    /// player one wins
    for(int y = 0; y<6;y++){
        for(int x = 0;x<7;x++){
            if(coords[y][x] == player){
                /// Horizontal Win
                if(coords[y][x+1] == player && coords[y][x+2] == player && coords[y][x+3] == player){
                    if(player == "1"){
                        p1Win();
                        winner = "1";
                    }
                }
                /// -Horizontal Win
                if(coords[y][x-1] == player && coords[y][x-2] == player && coords[y][x-3] == player){
                    if(player == "1"){
                        cout << "\nplayer 1 wins";
                        winner = "1";
                    }
                }
                /// Vertical Win
                if(coords[y-1][x] == player && coords[y-2][x] == player && coords[y-3][x] == player){
                    if(player == "1"){
                        p1Win();
                        winner = "1";
                    }
                }
                /// -Vertical Win
                /**if(coords[y+1][x] == player && coords[y+2][x] == player && coords[y+3][x] == player){
                    if(player == "1"){
                        cout << "\nplayer 1 wins";
                        winner = "1";
                    }
                }*/
                /// Positive Slope Win Win
                if(coords[y-1][x+1] == player && coords[y-2][x+2] == player && coords[y-3][x+3] == player){
                    if(player == "1"){
                        p1Win();
                        winner = "1";
                    }
                }
                /// -Positive Slope Win
                /**if(coords[y+1][x-1] == player && coords[y+2][x-2] == player && coords[y+3][x-3] == player){
                    if(player == "1"){
                        cout << "\nplayer 1 wins";
                        winner = "1";
                    }
                }*/
                /// Negative Slope Win
                if(coords[y-1][x-1] == player && coords[y-2][x-2] == player && coords[y-3][x-3] == player){
                    if(player == "1"){
                        p1Win();
                        winner = "1";
                    }
                }
                /// -Negative Slope Win
                /**if(coords[y+1][x-1] == player && coords[y-2][x-2] == player && coords[y-3][x-3] == player){
                    if(player == "1"){
                        cout << "\nplayer 1 wins";
                        winner = "1";
                    }
                }*/
            }
        }
    }
    /// Player two wins
    player = "2";
    for(int y = 0; y<6;y++){
        for(int x = 0;x<7;x++){
            if(coords[y][x] == player){
                /// Horizontal Win
                if(coords[y][x+1] == player && coords[y][x+2] == player && coords[y][x+3] == player){
                    if(player == "2"){
                        p2Win();
                        winner = "2";
                    }
                }
                /// -Horizontal Win
                /*if(coords[y][x-1] == player && coords[y][x-2] == player && coords[y][x-3] == player){
                    if(player == "2"){
                        cout << "\nplayer 1 wins";
                        winner = "2";
                    }
                }*/
                /// Vertical Win
                if(coords[y-1][x] == player && coords[y-2][x] == player && coords[y-3][x] == player){
                    if(player == "2"){
                        p2Win();
                        winner = "2";
                    }
                }
                /// -Vertical Win
                /*if(coords[y+1][x] == player && coords[y+2][x] == player && coords[y+3][x] == player){
                    if(player == "2"){
                        cout << "\nplayer 2 wins";
                        winner = "2";
                    }
                }*/
                /// Positive Slope Win Win
                if(coords[y-1][x+1] == player && coords[y-2][x+2] == player && coords[y-3][x+3] == player){
                    if(player == "2"){
                        p2Win();
                        winner = "2";
                    }
                }
                /// -Positive Slope Win
                /**if(coords[y+1][x-1] == player && coords[y+2][x-2] == player && coords[y+3][x-3] == player){
                    if(player == "2"){
                        cout << "\nplayer 2 wins";
                        winner = "2";
                    }
                }*/
                /// Negative Slope Win
                if(coords[y-1][x-1] == player && coords[y-2][x-2] == player && coords[y-3][x-3] == player){
                    if(player == "2"){
                        p2Win();
                        winner = "2";
                    }
                }
                /// -Negative Slope Win
                /**if(coords[y+1][x-1] == player && coords[y-2][x-2] == player && coords[y-3][x-3] == player){
                    if(player == "2"){
                        cout << "\nplayer 2 wins";
                        winner = "2";
                    }
                }*/
            }
        }
    }
}

void matrix(){ /*Loading screen*/
    system("title Loading...");
    system("color 0a");
    for(int i = 0;i<=50;i++){
        system("echo %random%%random%%random%%random%%random%%random%%random%%random%%random%%random%");
        system("echo %random%%random%%random%%random%%random%%random%%random%%random%%random%%random%");
    }
}

void p1Win(){ /* Shows the win screen for player 1*/
    system("cls");
    system("color 0b");
    system("mode 51");
    cout << "  |              |               |              |\n"
            "- + -          - + -           - + -          - + -\n"
            "  |              |               |              |\n"
            "\n\n"
            "  |              |               |              |\n"
            "- + -          - + -           - + -          - + -\n"
            "  |              |               |              |\n"
            "                      Player1                    \n"
            "                        WIN                      \n"
            "  |              |               |              |\n"
            "- + -          - + -           - + -          - + -\n"
            "  |              |               |              |\n"
            "\n\n"
            "  |              |               |              |\n"
            "- + -          - + -           - + -          - + -\n"
            "  |              |               |              |\n";
    system("pause");
    exit(0);
}

void p2Win(){ /* Shows the win screen for player 1*/
    system("cls");
    system("color 0b");
    system("mode 51");
    cout << "  |              |               |              |  \n"
            "- + -          - + -           - + -          - + -\n"
            "  |              |               |              |  \n"
            "                                                   \n"
            "                                                   \n"
            "  |              |               |              |  \n"
            "- + -          - + -           - + -          - + -\n"
            "  |              |               |              |  \n"
            "                      Player2                      \n"
            "                        WIN                        \n"
            "  |              |               |              |  \n"
            "- + -          - + -           - + -          - + -\n"
            "  |              |               |              |  \n"
            "                                                   \n"
            "                                                   \n"
            "  |              |               |              |  \n"
            "- + -          - + -           - + -          - + -\n"
            "  |              |               |              |  \n";
    system("pause");
    exit(0);
}

void text_animation(char a[100]){
    int i;
    double k;
    for(i = 0;a[i]!='\0';++i){
        for(k = 0;k<1000000;++k);{
            cout << a[i];
        }
    }
}
